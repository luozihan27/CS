// File name: Jump.hdl

/**
 * The jump unit determines whether the Program Counter should jump.
 * A jump is performed if any of the j1 j2 j3 bits of the c-instruction 
 * are true, AND the matching condition is met:
 *   j1: jump if ALU output is < 0
 *   j2: jump if ALU output   == 0
 *   j3: jump if ALU output is > 0
 * If multiple of these bits are set true, then jump if any of 
 * those conditions are met,
 * e.g. if j1 and j2 are both set true, jump if < 0 or == 0 
 * The ALU output is determined through the zr and ng wires:
 *   zr: is true when the ALU's output   == 0, false otherwise
 *   ng: is true when the ALU's output is < 0, false otherwise
 * If both zr and ng are false, then the ALU's output is > 0
 */

CHIP Jump {

    IN  j1,             // c-instruction j1
        j2,             // c-instruction j2
        j3,             // c-instruction j3
        zr,             // zr pin from ALU
        ng;             // ng pin from ALU

    OUT jump;           // true if a jump should be performed, false otherwise 

PARTS:
    // Put your code here:
    And(a=j1, b=ng, out=jlt);   // j1: if ng is true, jump if < 0
    And(a=j2, b=zr, out=jeq);   // j2: if zr is true, jump if == 0
    And(a=j3, b=posp, out=jgt); // j3: if !zr and !ng, jump if > 0

    Or(a=zr, b=ng, out=notGt); // 当 not_gt 为 false 时，即 zr 和 ng 都为 false, 则 posp 为 true
    Not(in=notGt, out=posp);

    Or(a=jlt, b=jeq, out=jumpTemp);
    Or(a=jumpTemp, b=jgt, out=jump);
}