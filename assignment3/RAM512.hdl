// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=dA, b=dB, c=dC, d=dD, e=dE, f=dF, g=dG, h=dH);
    RAM64(in=in, load=dA,address=address[3..8],  out=outA);
    RAM64(in=in, load=dB,address=address[3..8], out=outB);
    RAM64(in=in, load=dC,address=address[3..8], out=outC);
    RAM64(in=in, load=dD,address=address[3..8], out=outD);
    RAM64(in=in, load=dE,address=address[3..8], out=outE);
    RAM64(in=in, load=dF,address=address[3..8], out=outF);
    RAM64(in=in, load=dG,address=address[3..8], out=outG);
    RAM64(in=in, load=dH,address=address[3..8], out=ouH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=ouH, sel=address[0..2], out=out);
}